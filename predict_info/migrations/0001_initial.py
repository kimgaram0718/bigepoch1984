# Generated by Django 5.2.1 on 2025-05-29 11:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MarketIndex",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "market_name",
                    models.CharField(
                        choices=[("KOSPI", "코스피"), ("KOSDAQ", "코스닥")],
                        max_length=10,
                        verbose_name="시장 구분",
                    ),
                ),
                ("date", models.DateField(verbose_name="날짜")),
                ("close_price", models.FloatField(verbose_name="종가")),
                (
                    "previous_day_close_price",
                    models.FloatField(blank=True, null=True, verbose_name="전일 종가"),
                ),
                (
                    "change_value",
                    models.FloatField(blank=True, null=True, verbose_name="대비"),
                ),
                (
                    "change_percent",
                    models.FloatField(blank=True, null=True, verbose_name="등락률 (%)"),
                ),
                (
                    "volume",
                    models.BigIntegerField(
                        blank=True, null=True, verbose_name="거래량"
                    ),
                ),
                (
                    "trade_value",
                    models.BigIntegerField(
                        blank=True, null=True, verbose_name="거래대금"
                    ),
                ),
            ],
            options={
                "verbose_name": "일별 시장 지수",
                "verbose_name_plural": "일별 시장 지수 목록",
                "ordering": ["-date", "market_name"],
                "unique_together": {("market_name", "date")},
            },
        ),
        migrations.CreateModel(
            name="PredictedStockPrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "stock_code",
                    models.CharField(max_length=20, verbose_name="종목 코드"),
                ),
                ("stock_name", models.CharField(max_length=100, verbose_name="종목명")),
                (
                    "market_name",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="시장 구분"
                    ),
                ),
                ("prediction_base_date", models.DateField(verbose_name="예측 기준일")),
                ("predicted_date", models.DateField(verbose_name="예측 대상일")),
                ("predicted_price", models.FloatField(verbose_name="예측 종가")),
                (
                    "analysis_type",
                    models.CharField(
                        choices=[
                            ("technical", "기술적 분석 기반 LSTM"),
                            ("comprehensive", "종합 분석 기반 LSTM"),
                            ("ipynb_kospi_lstm", "ipynb KOSPI LSTM"),
                            ("ipynb_kosdaq_lstm", "ipynb KOSDAQ LSTM"),
                        ],
                        default="technical",
                        max_length=100,
                        verbose_name="분석 유형",
                    ),
                ),
                (
                    "model_version",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="사용 모델 버전",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성 시간"),
                ),
            ],
            options={
                "verbose_name": "주가 예측 결과",
                "verbose_name_plural": "주가 예측 결과 목록",
                "ordering": ["-prediction_base_date", "stock_code", "predicted_date"],
                "indexes": [
                    models.Index(
                        fields=[
                            "stock_code",
                            "prediction_base_date",
                            "analysis_type",
                            "predicted_date",
                        ],
                        name="pred_price_lookup_idx",
                    ),
                    models.Index(
                        fields=["prediction_base_date"],
                        name="predict_inf_predict_756ea1_idx",
                    ),
                ],
                "unique_together": {
                    (
                        "stock_code",
                        "prediction_base_date",
                        "predicted_date",
                        "analysis_type",
                    )
                },
            },
        ),
        migrations.CreateModel(
            name="StockPrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "stock_code",
                    models.CharField(max_length=20, verbose_name="종목 코드"),
                ),
                ("stock_name", models.CharField(max_length=100, verbose_name="종목명")),
                (
                    "market_name",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="시장 구분"
                    ),
                ),
                ("date", models.DateField(verbose_name="날짜")),
                (
                    "open_price",
                    models.FloatField(blank=True, null=True, verbose_name="시가"),
                ),
                (
                    "high_price",
                    models.FloatField(blank=True, null=True, verbose_name="고가"),
                ),
                (
                    "low_price",
                    models.FloatField(blank=True, null=True, verbose_name="저가"),
                ),
                (
                    "close_price",
                    models.FloatField(blank=True, null=True, verbose_name="종가"),
                ),
                (
                    "volume",
                    models.BigIntegerField(
                        blank=True, null=True, verbose_name="거래량"
                    ),
                ),
                (
                    "previous_day_close_price",
                    models.FloatField(blank=True, null=True, verbose_name="전일 종가"),
                ),
                (
                    "change",
                    models.FloatField(blank=True, null=True, verbose_name="등락률"),
                ),
                (
                    "change_value",
                    models.FloatField(blank=True, null=True, verbose_name="대비 가격"),
                ),
                (
                    "indi_volume",
                    models.BigIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="개인 순매수(금액 또는 수량)",
                    ),
                ),
                (
                    "foreign_volume",
                    models.BigIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="외국인 순매수(금액 또는 수량)",
                    ),
                ),
                (
                    "organ_volume",
                    models.BigIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="기관 순매수(금액 또는 수량)",
                    ),
                ),
                (
                    "market_cap",
                    models.BigIntegerField(
                        blank=True, null=True, verbose_name="시가총액"
                    ),
                ),
                ("per", models.FloatField(blank=True, null=True, verbose_name="PER")),
                ("pbr", models.FloatField(blank=True, null=True, verbose_name="PBR")),
                ("eps", models.FloatField(blank=True, null=True, verbose_name="EPS")),
                ("bps", models.FloatField(blank=True, null=True, verbose_name="BPS")),
                ("dps", models.FloatField(blank=True, null=True, verbose_name="DPS")),
                ("roe", models.FloatField(blank=True, null=True, verbose_name="ROE")),
                (
                    "MA5",
                    models.FloatField(blank=True, null=True, verbose_name="MA (5일)"),
                ),
                (
                    "MA10",
                    models.FloatField(blank=True, null=True, verbose_name="MA (10일)"),
                ),
                (
                    "MA20",
                    models.FloatField(blank=True, null=True, verbose_name="MA (20일)"),
                ),
                (
                    "MA60",
                    models.FloatField(blank=True, null=True, verbose_name="MA (60일)"),
                ),
                (
                    "MA120",
                    models.FloatField(blank=True, null=True, verbose_name="MA (120일)"),
                ),
                (
                    "EMA5",
                    models.FloatField(blank=True, null=True, verbose_name="EMA (5일)"),
                ),
                (
                    "EMA10",
                    models.FloatField(blank=True, null=True, verbose_name="EMA (10일)"),
                ),
                (
                    "EMA20",
                    models.FloatField(blank=True, null=True, verbose_name="EMA (20일)"),
                ),
                (
                    "EMA60",
                    models.FloatField(blank=True, null=True, verbose_name="EMA (60일)"),
                ),
                (
                    "EMA120",
                    models.FloatField(
                        blank=True, null=True, verbose_name="EMA (120일)"
                    ),
                ),
                (
                    "BB_Upper",
                    models.FloatField(
                        blank=True, null=True, verbose_name="볼린저밴드 상단"
                    ),
                ),
                (
                    "BB_Middle",
                    models.FloatField(
                        blank=True, null=True, verbose_name="볼린저밴드 중간"
                    ),
                ),
                (
                    "BB_Lower",
                    models.FloatField(
                        blank=True, null=True, verbose_name="볼린저밴드 하단"
                    ),
                ),
                (
                    "BB_Width",
                    models.FloatField(
                        blank=True, null=True, verbose_name="볼린저밴드 폭"
                    ),
                ),
                (
                    "BB_PercentB",
                    models.FloatField(
                        blank=True, null=True, verbose_name="볼린저밴드 %B"
                    ),
                ),
                ("MACD", models.FloatField(blank=True, null=True, verbose_name="MACD")),
                (
                    "MACD_Signal",
                    models.FloatField(
                        blank=True, null=True, verbose_name="MACD Signal"
                    ),
                ),
                (
                    "MACD_Hist",
                    models.FloatField(
                        blank=True, null=True, verbose_name="MACD Histogram"
                    ),
                ),
                (
                    "RSI6",
                    models.FloatField(blank=True, null=True, verbose_name="RSI (6일)"),
                ),
                (
                    "RSI14",
                    models.FloatField(blank=True, null=True, verbose_name="RSI (14일)"),
                ),
                (
                    "RSI28",
                    models.FloatField(blank=True, null=True, verbose_name="RSI (28일)"),
                ),
                (
                    "STOCH_K",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Stochastic %K (Slow)"
                    ),
                ),
                (
                    "STOCH_D",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Stochastic %D (Slow)"
                    ),
                ),
                (
                    "STOCH_SLOW_K",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Stochastic %K (Fast)"
                    ),
                ),
                (
                    "STOCH_SLOW_D",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Stochastic %D (Fast)"
                    ),
                ),
                (
                    "ATR14",
                    models.FloatField(blank=True, null=True, verbose_name="ATR (14일)"),
                ),
                (
                    "ADX14",
                    models.FloatField(blank=True, null=True, verbose_name="ADX (14일)"),
                ),
                (
                    "DMP14",
                    models.FloatField(blank=True, null=True, verbose_name="DI+ (14일)"),
                ),
                (
                    "DMN14",
                    models.FloatField(blank=True, null=True, verbose_name="DI- (14일)"),
                ),
                (
                    "CCI14",
                    models.FloatField(blank=True, null=True, verbose_name="CCI (14일)"),
                ),
                (
                    "MFI14",
                    models.FloatField(blank=True, null=True, verbose_name="MFI (14일)"),
                ),
                ("OBV", models.FloatField(blank=True, null=True, verbose_name="OBV")),
                (
                    "WilliamsR14",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Williams %R (14일)"
                    ),
                ),
                (
                    "Momentum",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Momentum (10일)"
                    ),
                ),
                (
                    "ROC",
                    models.FloatField(blank=True, null=True, verbose_name="ROC (10일)"),
                ),
                (
                    "TRIX",
                    models.FloatField(
                        blank=True, null=True, verbose_name="TRIX (14일, Signal 9일)"
                    ),
                ),
                (
                    "VR",
                    models.FloatField(blank=True, null=True, verbose_name="VR (20일)"),
                ),
                (
                    "PSY",
                    models.FloatField(blank=True, null=True, verbose_name="PSY (12일)"),
                ),
                (
                    "Market_Index_Close",
                    models.FloatField(
                        blank=True, null=True, verbose_name="해당일 시장 지수 종가"
                    ),
                ),
                (
                    "Market_Index_Change",
                    models.FloatField(
                        blank=True, null=True, verbose_name="해당일 시장 지수 등락률"
                    ),
                ),
                (
                    "USD_KRW_Close",
                    models.FloatField(
                        blank=True, null=True, verbose_name="해당일 원/달러 환율 종가"
                    ),
                ),
                (
                    "USD_KRW_Change",
                    models.FloatField(
                        blank=True, null=True, verbose_name="해당일 원/달러 환율 등락률"
                    ),
                ),
                (
                    "log_close_price",
                    models.FloatField(
                        blank=True, null=True, verbose_name="로그 변환 종가"
                    ),
                ),
                (
                    "log_volume",
                    models.FloatField(
                        blank=True, null=True, verbose_name="로그 변환 거래량"
                    ),
                ),
                (
                    "HL_spread",
                    models.FloatField(
                        blank=True, null=True, verbose_name="고가-저가 Spread"
                    ),
                ),
                (
                    "OC_spread",
                    models.FloatField(
                        blank=True, null=True, verbose_name="시가-종가 Spread"
                    ),
                ),
                (
                    "per_is_high",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="PER 고평가 여부"
                    ),
                ),
                (
                    "per_is_low",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="PER 저평가 여부"
                    ),
                ),
                (
                    "per_is_zero",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="PER 0 여부"
                    ),
                ),
                (
                    "per_is_nan",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="PER NaN 여부"
                    ),
                ),
                (
                    "pbr_is_high",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="PBR 고평가 여부"
                    ),
                ),
                (
                    "pbr_is_low",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="PBR 저평가 여부"
                    ),
                ),
                (
                    "pbr_is_zero",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="PBR 0 여부"
                    ),
                ),
                (
                    "pbr_is_nan",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="PBR NaN 여부"
                    ),
                ),
                (
                    "market_cap_is_nan",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="시가총액 NaN 여부"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성 시간"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="수정 시간"),
                ),
            ],
            options={
                "verbose_name": "일별 주가 및 피처",
                "verbose_name_plural": "일별 주가 및 피처 목록",
                "ordering": ["-date", "stock_code"],
                "indexes": [
                    models.Index(fields=["stock_code", "date"], name="stock_date_idx"),
                    models.Index(
                        fields=["stock_name"], name="predict_inf_stock_n_da1d0b_idx"
                    ),
                    models.Index(
                        fields=["market_name"], name="predict_inf_market__a2a94f_idx"
                    ),
                ],
                "unique_together": {("stock_code", "date")},
            },
        ),
        migrations.CreateModel(
            name="FavoriteStock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "stock_code",
                    models.CharField(max_length=20, verbose_name="종목 코드"),
                ),
                (
                    "stock_name",
                    models.CharField(blank=True, max_length=100, verbose_name="종목명"),
                ),
                (
                    "market_name",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="시장 구분"
                    ),
                ),
                (
                    "added_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="추가된 날짜"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorite_stocks",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="사용자",
                    ),
                ),
            ],
            options={
                "verbose_name": "관심 종목",
                "verbose_name_plural": "관심 종목 목록",
                "ordering": ["user", "-added_at"],
                "unique_together": {("user", "stock_code")},
            },
        ),
    ]
